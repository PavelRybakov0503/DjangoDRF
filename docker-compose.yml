services:

  app:
    build: .
    command: sh -c "python manage.py collectstatic --no-input && python manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8000"

    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - app

  db:
    image: postgres:16
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 10s
      retries: 5
      timeout: 5s


  redis:
    image: redis:latest
    expose:
      - "6379"

  celery:
    build: .
    command:
      bash -c "celery -A config worker --loglevel=info --pool=solo"
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env

  celery-beat:
    build: .
    command:
      bash -c "celery -A config beat --loglevel=info"
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env


volumes:
  pg_data:
  static_volume:
  redis_data: